---
import Tabla from "../../components/Tabla.astro";
import Layout from "../../layouts/Layout.astro";
import { getComparativas, getComparativaById } from "../../lib/getComparativas";

export const prerender = false;
const { id } = Astro.params;


interface Vehiculo {
  marca: string;
  modelo: string;
  consumo_combustible: number;
  eficiencia: number;
  capacidad_carga: number;
}

let comparativa
if (id) {
  comparativa = await getComparativaById(id);
}

const { vehiculo_id_1, vehiculo_id_2 } = comparativa as {
  vehiculo_id_1: Vehiculo;
  vehiculo_id_2: Vehiculo;
};
---

<Layout title=`${vehiculo_id_1.marca} vs ${vehiculo_id_2.marca}` }>
  <div class="max-w-screen-lg w-[80%] mx-auto mt-16">
    <a
      href="/"
      class="bg-segundo py-3 px-6 text-white rounded-full hover:bg-tercero transition-all"
      >Volver</a
    >
  </div>
  <main class="max-w-screen-lg w-[80%] mx-auto flex items-center pt-16">
    <section class="text-center w-[45%]">
      <h2 class="text-xl font-bold text-segundo mt-3">
        {vehiculo_id_1.marca}
        {vehiculo_id_1.modelo}
      </h2>
      <Tabla vehiculo={vehiculo_id_1} />
    </section>
    <span class="font-extrabold text-4xl text-tercero px-4">VS</span>
    <section class="text-center w-[45%]">
      <h2 class="text-xl font-bold text-segundo mt-3">
        {vehiculo_id_2.marca}
        {vehiculo_id_2.modelo}
      </h2>
      <Tabla vehiculo={vehiculo_id_2} />
    </section>
  </main>
  <section class="max-w-screen-sm w-[80%] mx-auto pt-16">
    <!-- Pasamos los datos JSON al DOM usando data-* -->
    <div id="chart-container" 
      data-vehiculo1={JSON.stringify(vehiculo_id_1)}
      data-vehiculo2={JSON.stringify(vehiculo_id_2)}
     class="flex justify-evenly items-center gap-6">
    <div class="flex flex-col items-center">
      <canvas id="chart-consumo" class="w-64 h-64"></canvas>
      <p class="mt-2 text-center text-sm font-medium text-gray-700">Consumo de Combustible</p>
    </div>
    <div class="flex flex-col items-center">
      <canvas id="chart-emisiones" class="w-64 h-64"></canvas>
      <p class="mt-2 text-center text-sm font-medium text-gray-700">Emisión de CO₂</p>
    </div>
    <div class="flex flex-col items-center">
      <canvas id="chart-capacidad" class="w-64 h-64"></canvas>
      <p class="mt-2 text-center text-sm font-medium text-gray-700">Capacidad de Carga</p>
    </div>
  </div>

    </canvas>
  </section>
</Layout>

<script>
  import Chart, { type ChartConfiguration } from "chart.js/auto";

  function initializeCharts() {
    const vehiculo1 = JSON.parse(document.getElementById("chart-container").getAttribute("data-vehiculo1"));
    const vehiculo2 = JSON.parse(document.getElementById("chart-container").getAttribute("data-vehiculo2"));

    const dataConfig = (label: string, data: number[]): ChartConfiguration => ({
      type: "doughnut",
      data: {
        labels: [`${vehiculo1.marca} ${vehiculo1.modelo}`, `${vehiculo2.marca} ${vehiculo2.modelo}`],
        datasets: [
          {
            label: label,
            data: data,
            backgroundColor: ["rgba(255, 99, 132, 0.5)", "rgba(54, 162, 235, 0.5)"],
            borderColor: ["rgba(255, 99, 132, 1)", "rgba(54, 162, 235, 1)"],
            borderWidth: 1,
          },
        ],
      },
      options: {
        responsive: true,
        plugins: {
          title: {
            display: true,
            text: label,
          },
          legend: {
            position: "bottom",
          },
        },
      },
    });

    const chartData = [
      {
        id: "chart-consumo",
        label: "Consumo de Combustible (L/100Km)",
        data: [vehiculo1.consumo_combustible, vehiculo2.consumo_combustible],
      },
      {
        id: "chart-emisiones",
        label: "Emisión de CO₂ (g/km)",
        data: [vehiculo1.eficiencia, vehiculo2.eficiencia],
      },
      {
        id: "chart-capacidad",
        label: "Capacidad de Carga (kg)",
        data: [vehiculo1.capacidad_carga, vehiculo2.capacidad_carga],
      },
    ];

    chartData.forEach(({ id, label, data }) => {
      const canvas = document.getElementById(id) as HTMLCanvasElement;
      new Chart(canvas, dataConfig(label, data));
    });
  }
  document.addEventListener("DOMContentLoaded", initializeCharts);
  document.addEventListener("astro:page-load", initializeCharts);
</script>
